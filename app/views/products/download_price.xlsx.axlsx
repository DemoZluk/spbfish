wb = xlsx_package.workbook
wb.use_autowidth = false

title = wb.styles.add_style b: true, sz: 15
parent_style = wb.styles.add_style b: true, border: { style: :medium, color: '000000' }, bg_color: 'F2F5A9', sz: 10, indent: 100
bold = wb.styles.add_style b: true, sz: 10
regular = wb.styles.add_style sz: 10, border: { style: :thin, color: '000000' }

wb.add_worksheet(name: 'Прайс') do |sheet|
  sheet.add_row ["Прайс от #{@date.strftime('%d.%m.%Y')}"], style: title
  sheet.add_row [], height: 10

  sheet.add_row ['Артикул', 'Производитель', 'Наименование', 'Полное наименование', 'Ваш заказ', 'Цена', 'Стоимость', 'Картинка'], style: bold, height: 15, widths: [10, 16, 50, 70, 10, 10, 10, 30] do |row|
  end

  imgs = Hash[Image.order(:original_url).group{product_id}.map { |e| [e.product_id.to_i, e.original_url] }]

  Group.where{parent_id == ''}.order(:priority).each do |parent|
    if parent.all_products.with_price.any?
      sheet.add_row [parent.title, '', '', '', '', '', '', ''], style: parent_style, height: 15 do |row|
        sheet.merge_cells row.cells.to_a
      end
      parent.children.order(:priority).each do |g|
        sheet.add_row [g.title, '', '', '', '', '', '', ''], style: parent_style, height: 15 do |row|
          sheet.merge_cells row.cells.to_a
        end
        g.products.order('producer, item').with_price.each do |p|
          sheet.add_row([p.item, p.producer, p.title, p.long_name, 0, p.price], style: regular, height: 15, type: :string) do |row|
            row.add_cell "=E#{row.index + 1}*F#{row.index + 1}", style: regular, height: 15
            row.add_cell (imgs[p.id] ? "=HYPERLINK(\"#{request.base_url}#{imgs[p.id]}\", \"#{p.title}\")" : 'Нет картинки'), style: regular
            # sheet.add_hyperlink location: "#{request.base_url}#{imgs[p.id]}", ref: "H#{row.index + 1}" if imgs[p.id]
          end
        end
      end
    end
    sheet.auto_filter = "A3:H#{sheet.rows.last.index + 1}"
    sheet.sheet_view.pane do |pane|
      pane.top_left_cell = "A4"
      pane.state = :frozen_split
      pane.y_split = 3
      pane.active_pane = :bottom_right
    end
  end
end

xlsx_package.serialize @filename